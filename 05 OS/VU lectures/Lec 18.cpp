/*
Algorithm Evaluation: Comparing which algorithm is good in particular situations.
1) Analytic Evaluation:
    The algorithm and some system workload (assuming some processes and their CPU Burst) are used to produce a 
    formula or number which gives the performance of the algorithm for that workload.
    
    Do this for all the algorithms which you want to compare.
    WorkLoad can be:
        => Deterministic Modeling
            Predetermined workload (as we are doing till now) and performance of each algorithm for
            that workload. Use of Gantt Charts.
                Simple and Fast
                Exact numbers for comparison
                Requires exact input
                Performance figures may not be true in general
        => Queuing Modeling
            Computer system viewed as a network of queues and servers.
                Queues: Ready queue, I/O queue, Event queue
                Servers: which serve to processes in queues. | CPU's. I/O device controllers etc.
            Input: Arrival and service rates
                rates are not actually some numbers but actually numbers after some distributions.
            Output: CPU utilization, average queue length, average wait time.
            Basic Calculation of Queueing Modeling
                Little's Formula:
                    n = λ*W
                    where;
                    n = average queue length
                    λ = average arrival rate
                    W  = average wait time in queue
                We can calculate Average Queue Length of algorithms and then compare using this formula.
            Complicated Mathematics
            Distributions can be of:
                 Poisson, uniform, exponential, etc 
                 We use these for calculation of the arrival and departure rates 
                 Difficult work with.
                 Assumptions may not accurate ==> That we use Poisson but processes come in Exponential.
                 Approximation of the real system

2) Simulation
    Programming model for the computer system.

    Simulation can work with workload:    
    WorkLoad generated by assuming some distributions and a random number generator,
    or by collecting data from the actual system.


    Get Data of actual system and store them in trace tape.
    Give to simulation (programming model for computer system) of different algorithms and get performances of algos.

    Expensive: hours of programming and execution time
    Maybe erroneous because of the assumptions about distributions.



3) Implementation ==> Apply Algos directly on system and allow users to use them, and then get performance.
    Best
    Most Expensive Because we have to change algo in kernel again and again and also  for checking by users.
        Good option due to Open source kernels such as linux
*/